---
const navItems = [
  { label: "Home", href: "/" },
  { label: "Blog", href: "/blog" },
  { label: "Stories", href: "/stories" },
  { label: "About", href: "/about" },
  { label: "Contact", href: "/contact" },
];

const currentPath = Astro.url.pathname;
---

<nav class="border-b border-gray-100">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center h-16">
      <a
        href="/"
        class="text-2xl font-serif text-purple-900 hover:text-purple-700 transition-colors duration-300"
      >
        Inked Narratives
      </a>

      <!-- Desktop Navigation -->
      <div class="hidden md:flex space-x-8">
        {
          navItems.map((item) => {
            const isActive =
              currentPath === item.href ||
              (item.href !== "/" && currentPath.startsWith(item.href));
            return (
              <a
                href={item.href}
                class:list={[
                  "relative py-2 text-purple-600 transition-all duration-300",
                  "hover:text-purple-900 group",
                  isActive && "text-purple-900",
                ]}
              >
                {item.label}
                <span
                  class={`absolute bottom-0 left-0 w-full h-0.5 bg-purple-600 transform origin-left transition-transform duration-300 ${isActive ? "scale-x-100" : "scale-x-0"} group-hover:scale-x-100`}
                />
              </a>
            );
          })
        }
      </div>

      <!-- Mobile Navigation Button -->
      <button
        id="mobile-menu-button"
        class="md:hidden p-2 rounded-md text-purple-600 hover:text-purple-900 hover:bg-purple-50 transition-all duration-300 transform hover:scale-105"
        aria-label="Toggle menu"
      >
        <svg
          class="h-6 w-6 transition-transform duration-300"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
      </button>
    </div>

    <!-- Mobile Navigation Menu -->
    <div
      id="mobile-menu"
      class="hidden md:hidden pb-4 transform origin-top transition-all duration-300"
    >
      <div class="flex flex-col space-y-1">
        {
          navItems.map((item) => {
            const isActive =
              currentPath === item.href ||
              (item.href !== "/" && currentPath.startsWith(item.href));
            return (
              <a
                href={item.href}
                class:list={[
                  "px-4 py-2 rounded-md transition-all duration-300",
                  "text-purple-600 hover:text-purple-900",
                  "hover:bg-purple-50 hover:translate-x-2",
                  "transform hover:scale-102",
                  isActive && "bg-purple-50 text-purple-900",
                ]}
              >
                {item.label}
              </a>
            );
          })
        }
      </div>
    </div>
  </div>
</nav>

<script>
  const mobileMenuButton = document.getElementById("mobile-menu-button");
  const mobileMenu = document.getElementById("mobile-menu");

  if (mobileMenuButton && mobileMenu) {
    mobileMenuButton.addEventListener("click", () => {
      const isExpanded =
        mobileMenuButton.getAttribute("aria-expanded") === "true";
      mobileMenuButton.setAttribute("aria-expanded", (!isExpanded).toString());

      // Toggle menu with animation
      if (!isExpanded) {
        mobileMenu.classList.remove("hidden");
        requestAnimationFrame(() => {
          mobileMenu.classList.add("opacity-100", "scale-y-100");
          mobileMenu.classList.remove("opacity-0", "scale-y-95");
        });
      } else {
        mobileMenu.classList.add("opacity-0", "scale-y-95");
        mobileMenu.classList.remove("opacity-100", "scale-y-100");
        setTimeout(() => {
          mobileMenu.classList.add("hidden");
        }, 300);
      }

      // Update the hamburger icon to an X when menu is open
      const svg = mobileMenuButton.querySelector("svg");
      if (svg) {
        if (!isExpanded) {
          svg.innerHTML = `
            <path 
              stroke-linecap="round" 
              stroke-linejoin="round" 
              stroke-width="2" 
              d="M6 18L18 6M6 6l12 12"
            />
          `;
          svg.classList.add("rotate-90");
        } else {
          svg.innerHTML = `
            <path 
              stroke-linecap="round" 
              stroke-linejoin="round" 
              stroke-width="2" 
              d="M4 6h16M4 12h16M4 18h16"
            />
          `;
          svg.classList.remove("rotate-90");
        }
      }
    });
  }
</script>

<style>
  @keyframes slideIn {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .scale-y-95 {
    transform: scaleY(0.95);
  }

  .scale-y-100 {
    transform: scaleY(1);
  }
</style>
